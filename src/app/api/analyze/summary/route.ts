import { NextRequest, NextResponse } from 'next/server'
import OpenAI from 'openai'

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
})

export async function POST(request: NextRequest) {
  try {
    const { vndResult, npResult } = await request.json()
    
    if (!vndResult || !npResult) {
      return NextResponse.json(
        { error: 'Для формирования итогового заключения необходимо предоставить результаты ВНД и НП анализа' }, 
        { status: 400 }
      )
    }

    const response = await openai.responses.create({
      model: "gpt-4o",
      input: [
        {
          role: "system",
          content: [
            {
              type: "input_text",
              text: `Ты выступаешь как независимый (цифровой) член Совета директоров. На основе результатов анализа ВНД (внутренние нормативные документы) и НП (нормативно-правовые акты) сформируй структурированное решение по пункту повестки дня.

СТРОГО соблюдай структуру и маркеры секций в следующем формате Markdown (не добавляй лишних блоков, не меняй порядок):

**ПУНКТ ПОВЕСТКИ ДНЯ:** <краткое название вопроса (если не очевидно, определи наиболее вероятное)>

**РЕШЕНИЕ НЕЗАВИСИМОГО ЧЛЕНА СД:** ЗА | ПРОТИВ

**КРАТКОЕ ЗАКЛЮЧЕНИЕ:** <4-6 предложения простым деловым языком, чтобы быстро понять суть решения>

**ОБОСНОВАНИЕ:**
- **Контекст и выводы:** <3-5 абзаца о том, что выявлено в анализах>
- **Риски:** <4-6 тезиса; если значимых рисков нет — "Существенных рисков не выявлено">
- **Рекомендации:** <конкретные действия; если не требуется — "Дополнительных действий не требуется">
- **Источники:** <каждый пункт — документ/акт + номер/раздел + краткая цитата или тезис; если данных нет — "Недостаточно данных для оценки">

ТРЕБОВАНИЯ:
- Все подпункты внутри раздела "ОБОСНОВАНИЕ" начинай с тире и выделяй жирным (например: "- **Риски:** ...").
- Используй фактические ссылки/пункты только если модель уверена (не выдумывай номера!).
- Если точных реквизитов нет — укажи категорию (например: "Регламент по ИБ", "Трудовое законодательство").
- Решение всегда одно слово (ЗА или ПРОТИВ, верхний регистр).
- Не добавляй текст вне указанных секций.
`
            }
          ]
        },
        {
          role: "user",
          content: [
            {
              type: "input_text",
              text: `На основе следующих анализов прими решение как виртуальный директор:

ВНД Анализ:
${vndResult}

НП Анализ:
${npResult}

Сформируй ответ строго в требуемой структуре Markdown. Не отклоняйся от формата.`
            }
          ]
        }
      ],
      max_output_tokens: 16384,
      temperature: 0.4
    })

    const result = response.output_text || 'Ошибка получения итогового анализа'

    return NextResponse.json({
      success: true,
      result
    })

  } catch (error) {
    console.error('Ошибка формирования итогового заключения:', error)

    if (error instanceof OpenAI.APIError) {
      const status = error.status ?? 500
      const message = error.error?.message || 'Ошибка при формировании итогового заключения'
      return NextResponse.json({ error: message }, { status })
    }

    return NextResponse.json({ error: 'Ошибка при формировании итогового заключения' }, { status: 500 })
  }
}